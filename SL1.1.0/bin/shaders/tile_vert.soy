#version 330 core
layout(location = 0) in uvec2 inID;

out vec3 outPos;
out vec3 outWorld;
out vec3 outNormal;

flat out uint outType;
flat out int outSelected;

uniform vec3 worldScale;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

uniform int selectedX;
uniform int selectedY;

uniform float playerX;
uniform float playerY;

void main() {
  uint ID = inID.x;
  uint dataX = (ID)           & 0x0FFU;
  uint dataY = (ID >> 8U)     & 0x0FFU;
  uint dataH = (ID >> 16U)    & 0xFFFU;
  uint dataN = (inID.y)       & 0xFFFFFFU;
  uint dataT = (inID.y >> 24U) & 0xFFU;

  float nx = (float((dataN >> 0U) & 0xFFU) - 128.0f) / 127.0;
  float ny = (float((dataN >> 8U) & 0xFFU) - 128.0f) / 127.0;
  float nz = (float((dataN >> 16U) & 0xFFU) - 128.0f) / 127.0;

  float px = float(dataX) / worldScale.x;
  float py = float(dataH) / worldScale.y;
  float pz = float(dataY) / worldScale.z;

  vec3 pos = vec3(px, py, pz);
  outPos = pos;
  outWorld = (model * vec4(pos, 1.0)).xyz;
  outNormal = normalize(vec3(nx, nz, ny));
  outType = dataT;
  outSelected = 
    (uint(selectedX) == dataX && uint(selectedY) == dataY) ? 1 : 0;
  gl_Position = projection * view * model * vec4(outPos, 1.0);
};

