#version 330 core
out vec4 fragCol;
in vec3 outPos;
in vec2 outUV;
in vec3 outCol;

uniform int debugCol;
uniform float outlineWidth;

const vec3 COLS[8] = vec3[8](
  vec3(1.0, 0.0, 0.0),
  vec3(1.0, 0.5, 0.0),
  vec3(1.0, 1.0, 0.0),
  vec3(0.5, 1.0, 0.0),
  vec3(0.0, 1.0, 0.0),
  vec3(0.0, 1.0, 0.5),
  vec3(0.0, 1.0, 1.0),
  vec3(0.0, 0.5, 1.0)
);

bool Border(vec3 p, float t) {
  float min = -0.5 + t;
  float max = 0.5 - t;
  bool bx = (p.x > max || p.x < min);
  bool by = (p.y > max || p.y < min);
  bool bz = (p.z > max || p.z < min);
  return (bx && by || (bx && bz) || (by && bz)) ? true : false;
}


void main() {
  if(outlineWidth > 0.0) {
    if(Border(outPos, outlineWidth*0.001)) {
      fragCol = vec4(COLS[debugCol], 0.8);
    } else {
      discard;
    }
  } else {
    fragCol = vec4(COLS[debugCol], 0.8);
  }
};

